{"version":3,"sources":["components/Food/Food.module.css","components/Food/PersonInfo.module.css","components/Light/Light.module.scss","components/Food/Item.module.css","components/Food/Nutrition.module.css","components/Sleep/VideoContainer/VideoContainer.module.scss","components/Sleep/Sleep.module.scss","components/Sleep/SleepStages/SleepStages.module.scss","components/Button/Button.module.scss","components/Food/FoodChart.module.css","components/Health/Health.module.scss","components/Menu.module.scss","assets/main.svg","assets/logo.svg","assets/rockets.svg","components/Menu.js","components/Fitness/Fitness.js","assets/images/logo.svg","assets/images/image.svg","assets/images/caution1.svg","components/Light/Light.js","components/Button/Button.js","components/Health/ChangingProgressProvider.js","components/Health/Health.js","components/Food/FoodChart.js","components/Food/Nutrition.js","components/Food/Item.js","components/Food/FoodList.js","components/Food/PersonInfo.js","algorithms/foodPlanner/Nutritions.js","algorithms/foodPlanner/Food.js","algorithms/foodPlanner/food_edited.csv","algorithms/foodPlanner/FoodDatabase.js","algorithms/foodPlanner/utils.js","algorithms/foodPlanner/FoodPlanner.js","components/Food/Food.js","assets/track.svg","components/Sleep/SleepStages/SleepStages.js","components/Sleep/VideoContainer/VideoContainer.js","components/Sleep/Sleep.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Menu","Fragment","className","styles","mainImage","src","Image","alt","logo","Logo","rocketsImage","Rockets","menu","header","menuContainerManagment","to","button","menuContainerTool","join","Fitness","Light","useState","checked","setChecked","beginInput","setBeginInput","endInput","setEndInput","diff","setDiff","DaySlider","withStyles","root","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","NightSlider","countDiff","begin","end","endHour","split","beginHour","console","log","resHour","resMin","Number","Math","floor","modules","container","image","onChange","onColor","switch","sliders","valueLabelDisplay","aria-label","defaultValue","nightTime","inputs","type","value","event","target","duration","warning","caution","Button","props","classes","onClick","children","ChangingProgressProvider","state","valuesIndex","setInterval","setState","this","values","React","Component","defaultProps","interval","randomDataGen","length","temp","data","date","Date","i","newDate","getTime","random","push","getDate","getMonth","reverse","randomDataYearGen","months","Health","padding","overallDataWeek","overallDataMonth","overallDataYear","tempDataWeek","tempDataMonth","tempDataYear","mentalDataWeek","mentalDataMonth","mentalDataYear","physicDataWeek","physicDataMonth","physicDataYear","overall","setOverall","setTemp","mental","setMental","physic","setPhysic","week","month","year","buttonsOverall","setButtonsOverall","buttonsTemp","setButtonsTemp","buttonsMental","setButtonsMental","buttonsPhysic","setButtonsPhysic","title","style","fontSize","textAlign","fill","circularStyle","buildStyles","pathColor","textColor","textSize","progressBars","slice","toFixed","percentage","text","minValue","maxValue","container_chart","chartTitle","description","autoFit","scale","min","max","onLineMouseleave","position","stroke","showCrosshairs","lock","triggerOn","name","dateLabel","buttons","FoodChart","containerChart","adjust","marginRatio","shared","Nutrition","calories","carbon","fat","protein","Item","foodItem","item","checkbox","click","index","resContainer","time","hour","itemName","nutrition","ml","FoodList","foodContainer","day","foodList","food","map","checkHandlerButton","foodHandler","PersonInfo","onSubmit","submit","PersonInfoForm","id","handleAgeChange","styledInput","htmlFor","placeholder","required","handleHeightChange","handleWeightChange","genderOption","handleGenderChange","submitOptions","styledInputButton","Nutritions","fluid","proteins","carbs","fats","parseFloat","val","Food","nutritions","csvJSON","path","a","fetch","Food_edited","then","response","csv","lines","result","headers","replace","obj","currentline","j","FoodDatabase","foodJson","foodArray","forEach","element","pop","water","shuffle","array","temporaryValue","randomIndex","currentIndex","randomTime","start_hour","end_hour","round","FoodPlanner","foodDatabase","init","age","weight","gender","activity_factor","n","left_nutritions","constructor","calculateRequiredNutrition","return_food","food_array","getFoodList","iterations","foods","best_value","Infinity","best_index","rank","calculateFoodRank","selected_food","setFluid","getFluid","getNutritions","setCalories","getCalories","setProteins","getProteins","setCarbs","getCarbs","setFats","getFats","getWater","sort","b","hours","minutes","calculateRMR","dailyCalories","calculateDailyCalories","leftNutritions","leftCalories","leftProteins","leftCarbs","leftFats","neededSum","priorityValue","excessiveCalories","excessiveProteins","excessiveCarbs","getRequiredNutrition","getDailyMenu","foodPlanner","generateDailyMenu","setvalue","setFood","person","setPerson","modalVisible","setModalVisible","reqNutrition","setReqNutrition","addZero","useEffect","clearInterval","submitHandler","preventDefault","reqNut","dailyMenu","chartData","mode","calculateFoodResources","parseInt","foodRes","personClone","sectionFood","resourceContainer","currentHour","getHours","getMinutes","list","resource","itemType","resValue","foodListCopy","SleepStages","progressBar","sleepTime","mins","convertTime","trailColor","VideoContainer","videoContainer","videos","video","url","controls","Sleep","dataWeek","dataMonth","dataDays","setData","sleepStageData","setSleepStageData","currDay","setCurrDay","currDataType","setCurrDataType","getRandomIntInclusive","ceil","convertHoursToMinutes","hrs","sleepStageDataTime","reduce","prevVal","curVal","navigation","d","whiteBtn","titleDiv","sleepQualityContainer","getTimeSlept","overalStatusContainer","trackContainer","trackImage","sleepQualityImage","trackText","trackTextInfo","trackTextInfoQuality","getQualityOfSleep","chartContainer","onPointClick","evt","visible","label","size","animate","domStyles","items","tooltip","formatter","chartTip","buttonsContainer","weekBtn","monthBtn","daysBtn","sleepSheduleContainer","from","s","sheduleDay","sheduleDayName","sheduleDayTime","App","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2317375e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionFood\":\"Food_sectionFood__39She\",\"foodContainer\":\"Food_foodContainer__3vpqK\",\"resourceContainer\":\"Food_resourceContainer__iku_2\",\"resource\":\"Food_resource__2UMOb\",\"itemType\":\"Food_itemType__1_lwN\",\"list\":\"Food_list__2R1pq\",\"resValue\":\"Food_resValue__1OMPu\",\"day\":\"Food_day__1RuoZ\",\"foodList\":\"Food_foodList__3tvcp\",\"currentHour\":\"Food_currentHour__3ZtTq\",\"hour\":\"Food_hour__25PzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PersonInfo\":\"PersonInfo_PersonInfo__1hk7T\",\"PersonInfoForm\":\"PersonInfo_PersonInfoForm__1WBFP\",\"styledInput\":\"PersonInfo_styledInput__Dejm7\",\"genderOption\":\"PersonInfo_genderOption__3FipF\",\"submitOptions\":\"PersonInfo_submitOptions__3SKhr\",\"styledInputButton\":\"PersonInfo_styledInputButton__3lDBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Light_container__3Q_vG\",\"header\":\"Light_header__1CXFT\",\"switch\":\"Light_switch__3mpCp\",\"sliders\":\"Light_sliders__3upfT\",\"nightTime\":\"Light_nightTime__2-D94\",\"inputs\":\"Light_inputs__nMxWA\",\"duration\":\"Light_duration__3Spk8\",\"warning\":\"Light_warning__28nRf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodItem\":\"Item_foodItem__2eqFQ\",\"itemName\":\"Item_itemName__3HDaW\",\"resContainer\":\"Item_resContainer__3GCzA\",\"checkbox\":\"Item_checkbox__2ATpF\",\"time\":\"Item_time__1bxRe\",\"nutrition\":\"Item_nutrition__27H7r\",\"ml\":\"Item_ml__MWpnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calories\":\"Nutrition_calories__2bC9z\",\"fat\":\"Nutrition_fat__2p3eq\",\"protein\":\"Nutrition_protein__3wFYe\",\"carbon\":\"Nutrition_carbon__1YerJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoContainer\":\"VideoContainer_videoContainer__47bKf\",\"videos\":\"VideoContainer_videos__2HacC\",\"video\":\"VideoContainer_video__22Zuk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Sleep_navigation__pQoTe\",\"titleDiv\":\"Sleep_titleDiv__1Ghl4\",\"sleepQualityContainer\":\"Sleep_sleepQualityContainer__8xZ1b\",\"overalStatusContainer\":\"Sleep_overalStatusContainer__1q4I2\",\"trackContainer\":\"Sleep_trackContainer__1_jOw\",\"sleepQualityImage\":\"Sleep_sleepQualityImage__-cvVo\",\"trackText\":\"Sleep_trackText__2Zwff\",\"trackTextInfo\":\"Sleep_trackTextInfo__1rX3D\",\"trackTextInfoQuality\":\"Sleep_trackTextInfoQuality__2pEyZ\",\"chartTip\":\"Sleep_chartTip__1w7GB\",\"chartContainer\":\"Sleep_chartContainer__1JuU_\",\"buttonsContainer\":\"Sleep_buttonsContainer__2C2SU\",\"button\":\"Sleep_button__N3zUf\",\"sleepSheduleContainer\":\"Sleep_sleepSheduleContainer__3Bdzj\",\"sheduleDay\":\"Sleep_sheduleDay__1bbRU\",\"sheduleDayName\":\"Sleep_sheduleDayName__2mN8y\",\"sheduleDayTime\":\"Sleep_sheduleDayTime__3Cd_r\",\"whiteBtn\":\"Sleep_whiteBtn__32sx2\",\"active\":\"Sleep_active__1BQO-\",\"tooltip\":\"Sleep_tooltip__1ASqI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressBar\":\"SleepStages_progressBar__HCQ1H\",\"title\":\"SleepStages_title__1XZys\",\"container\":\"SleepStages_container__5bFI5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Button_active__2CBCU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerChart\":\"FoodChart_containerChart__1cRLe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Health_container__1DiiC\",\"title\":\"Health_title__3PhHp\",\"progressBars\":\"Health_progressBars__3SY-H\",\"container_chart\":\"Health_container_chart__1Q6LY\",\"chartTitle\":\"Health_chartTitle__1k0jD\",\"description\":\"Health_description__2OeWz\",\"dateLabel\":\"Health_dateLabel__3XXy8\",\"buttons\":\"Health_buttons__NHtcg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainImage\":\"Menu_mainImage__2RB2q\",\"rocketsImage\":\"Menu_rocketsImage__Z2LoY\",\"logo\":\"Menu_logo__2PXfs\",\"menu\":\"Menu_menu__2Qof6\",\"menuContainerManagment\":\"Menu_menuContainerManagment__295LV\",\"menuContainerTool\":\"Menu_menuContainerTool__LgcjL\",\"header\":\"Menu_header__Fb0os\",\"button\":\"Menu_button__19t1l\"};","export default __webpack_public_path__ + \"static/media/main.9e91be3f.svg\";","export default __webpack_public_path__ + \"static/media/logo.2b0ef3ad.svg\";","export default __webpack_public_path__ + \"static/media/rockets.fdaec1fe.svg\";","import React from 'react'\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Image from '../assets/main.svg';\r\nimport Logo from '../assets/logo.svg';\r\nimport Rockets from '../assets/rockets.svg';\r\nimport styles from \"./Menu.module.scss\";\r\n\r\nfunction Menu() {\r\n    return (\r\n        <React.Fragment>\r\n            <div className={styles.mainImage}>\r\n                <img src={Image} alt=\"spaceman\" />\r\n            </div>\r\n            <div className={styles.logo}>\r\n                <img src={Logo} alt=\"spaceman\" />\r\n            </div>\r\n            <div className={styles.rocketsImage}>\r\n                <img src={Rockets} alt=\"spaceman\" />\r\n            </div>\r\n            <section className={styles.menu}>\r\n                <h1 className={styles.header}>MANAGMENT</h1>\r\n                <div className={styles.menuContainerManagment}>\r\n                    <Link to=\"/sleep\"><button className={styles.button}>Sleep</button></Link>\r\n                    <Link to=\"/light\"><button className={styles.button}>Light</button></Link>\r\n                    <Link to=\"/food\"><button className={styles.button}>Food</button></Link>\r\n                    <Link to=\"/health\"><button className={styles.button}>Health</button></Link>\r\n                </div>\r\n\r\n                <h1 className={styles.header}>HOW TO</h1>\r\n                <div className={styles.menuContainerTool}>\r\n                    <div className={[styles.menuContainerManagment, styles.menuContainerTool].join(' ')}>\r\n                        <Link to=\"/sleep\"><button className={styles.button}>Tutorials</button></Link>\r\n                        <Link to=\"/light\"><button className={styles.button}>Knowledge</button></Link>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\n\r\nfunction Fitness() {\r\n    return (\r\n        <h1>Hello from fitness</h1>\r\n    )\r\n}\r\n\r\nexport default Fitness","export default __webpack_public_path__ + \"static/media/logo.6f135cc7.svg\";","export default __webpack_public_path__ + \"static/media/image.0a0622f6.svg\";","export default __webpack_public_path__ + \"static/media/caution1.9c6b0e53.svg\";","import React, {useState} from 'react'\r\nimport Switch from \"react-switch\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nimport modules from './Light.module.scss'\r\n\r\nimport logo from '../../assets/images/logo.svg'\r\nimport image from '../../assets/images/image.svg'\r\nimport caution from '../../assets/images/caution1.svg'\r\n\r\nfunction Light() {\r\n\r\n    const [checked, setChecked] = useState(true);\r\n    const [beginInput, setBeginInput] = useState('23:00')\r\n    const [endInput, setEndInput] = useState('6:00')\r\n    const [diff, setDiff] = useState('7:00')\r\n\r\n    const handleChecked = () => {\r\n        setChecked(!checked)\r\n    }\r\n\r\n    const DaySlider = withStyles({\r\n        root: {\r\n          color: '#FF5151',\r\n          height: 8,\r\n        },\r\n        thumb: {\r\n          height: 30,\r\n          width: 30,\r\n          backgroundColor: '#fff',\r\n          border: '2px solid currentColor',\r\n          marginTop: -8,\r\n          marginLeft: -12,\r\n          '&:focus, &:hover, &$active': {\r\n            boxShadow: 'inherit',\r\n          },\r\n        },\r\n        active: {},\r\n        valueLabel: {\r\n          left: 'calc(-50% + 4px)',\r\n        },\r\n        track: {\r\n          height: 12,\r\n          borderRadius: 8,\r\n        },\r\n        rail: {\r\n          height: 12,\r\n          borderRadius: 8,\r\n        },\r\n      })(Slider);\r\n\r\n      const NightSlider = withStyles({\r\n        root: {\r\n          color: '#FF5151',\r\n          height: 8,\r\n        },\r\n        thumb: {\r\n          height: 30,\r\n          width: 30,\r\n          backgroundColor: '#fff',\r\n          border: '2px solid currentColor',\r\n          marginTop: -8,\r\n          marginLeft: -12,\r\n          '&:focus, &:hover, &$active': {\r\n            boxShadow: 'inherit',\r\n          },\r\n        },\r\n        active: {},\r\n        valueLabel: {\r\n          left: 'calc(-50% + 4px)',\r\n        },\r\n        track: {\r\n          height: 12,\r\n          borderRadius: 8,\r\n        },\r\n        rail: {\r\n          height: 12,\r\n          borderRadius: 8,\r\n        },\r\n      })(Slider);\r\n\r\n      const beginInputHandler = (event) => {\r\n        const value = event.target.value\r\n        setBeginInput(value)\r\n        countDiff(value, endInput)\r\n      }\r\n\r\n      const endInputHandler = (event) => {\r\n        const value = event.target.value\r\n        setEndInput(value)\r\n        countDiff(beginInput, value)\r\n      }\r\n\r\n      const countDiff = (begin, end) => {\r\n          const endHour = end.split(\":\")\r\n          const beginHour = begin.split(\":\")\r\n          console.log(endHour)\r\n          let resHour = 0;\r\n          let resMin = 0;\r\n\r\n          if (Number(endHour[0]) < Number(beginHour[0])){\r\n              resHour = 24 - Number(beginHour[0]) - 1 + Number(endHour[0])\r\n              resMin = 60 - Number(beginHour[1]) + Number(endHour[1])\r\n              resHour += Math.floor(resMin/60)\r\n              resMin %= 60\r\n          } else {\r\n              resHour = Number(endHour[0]) - Number(beginHour[0])\r\n              resMin = Number(endHour[1]) - Number(beginHour[1])\r\n              console.log(resHour, endHour, beginHour)\r\n              if (resMin < 0) {\r\n                resHour -= 1\r\n                resMin += 60\r\n              }\r\n          }\r\n\r\n          setDiff(`${resHour}:${resMin}`)\r\n      }\r\n\r\n    return (\r\n        <div className={modules.container}>\r\n            <div className={modules.header}>\r\n                <img src={image} alt=\"\"/>\r\n                <p>Lightning assistant</p>\r\n                <img src={logo} alt=\"\"/>\r\n            </div>\r\n            <Switch onChange={handleChecked} onColor=\"#FF5151\" className={modules.switch}/>\r\n\r\n            <div className={modules.sliders}>\r\n                <div>\r\n                    <p>DAY LIGHT INTENSITY</p>\r\n                    <DaySlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" defaultValue={20} />\r\n                </div>\r\n                <div>\r\n                    <p>NIGHT LIGHT INTENSITY</p>\r\n                    <NightSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" defaultValue={20} />\r\n                </div>\r\n            </div>\r\n            <div className={modules.nightTime}>\r\n                <p>NIGHT TIME</p>\r\n                <div className={modules.inputs}>\r\n                    <input type=\"text\" value={beginInput} onChange={beginInputHandler}/>\r\n                    <div></div>\r\n                    <input type=\"text\" value={endInput} onChange={endInputHandler}/>\r\n                </div>\r\n            </div>\r\n            <div className={modules.duration}>\r\n                <span>DURATION</span>\r\n                <span>{`${diff}h`}</span>\r\n            </div>\r\n            <div className={modules.warning}>\r\n                <img src={caution} alt=\"\"/>\r\n                <p>8-9 hours are recommended</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Light\r\n","import React from 'react';\r\n\r\nimport modules from './Button.module.scss'\r\n\r\nconst Button = (props) => {\r\n\r\n    const classes = props.active ? modules.active : null;\r\n\r\n    return (\r\n        <button className={classes} onClick={props.onClick}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from \"react\";\r\n\r\nclass ChangingProgressProvider extends React.Component {\r\n  static defaultProps = {\r\n    interval: 1000\r\n  };\r\n\r\n  state = {\r\n    valuesIndex: 0\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    setInterval(() => {\r\n      this.setState({\r\n        valuesIndex: 1 % 2\r\n      });\r\n    }, 0);\r\n  }\r\n\r\n    \r\n\r\n  render() {\r\n    return this.props.children(this.props.values[this.state.valuesIndex]);\r\n  }\r\n}\r\n\r\nexport default ChangingProgressProvider;\r\n","import React, { useState } from 'react';\r\nimport { Chart, Line, Point, Tooltip, Axis } from 'bizcharts';\r\n\r\nimport modules from './Health.module.scss';\r\nimport Logo from '../../assets/images/logo.svg';\r\nimport Button from '../Button/Button';\r\nimport ChangingProgressProvider from './ChangingProgressProvider';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nconst randomDataGen = (length, temp = false) => {\r\n\tconst data = [];\r\n\tconst date = new Date();\r\n\tlet value;\r\n\tfor (var i = 0; i < length; i++) {\r\n\t\tconst newDate = new Date(date.getTime() - i * 86400000);\r\n\t\tif (temp) {\r\n\t\t\tvalue = 34 + Math.random() * (39 - 34);\r\n\t\t} else {\r\n\t\t\tvalue = Math.random() * 100;\r\n\t\t}\r\n\t\tconsole.log(newDate);\r\n\t\tdata.push({\r\n\t\t\tdate: `${newDate.getDate()}.${newDate.getMonth() + 1}`,\r\n\t\t\tvalue: value,\r\n\t\t});\r\n\t}\r\n\r\n\treturn data.reverse();\r\n};\r\n\r\nconst randomDataYearGen = (temp = false) => {\r\n\tconst months = [\r\n\t\t'Jan',\r\n\t\t'Feb',\r\n\t\t'Mar',\r\n\t\t'Apr',\r\n\t\t'May',\r\n\t\t'Jun',\r\n\t\t'Jul',\r\n\t\t'Aug',\r\n\t\t'Sep',\r\n\t\t'Oct',\r\n\t\t'Nov',\r\n\t\t'Dec',\r\n\t];\r\n\tconst data = [];\r\n\tconst date = new Date();\r\n\tlet value;\r\n\tfor (var i = 0; i < 12; i++) {\r\n\t\tconst newDate = new Date(date.getTime() + i * 86400000);\r\n\t\tif (temp) {\r\n\t\t\tvalue = 34 + Math.random() * (39 - 34);\r\n\t\t} else {\r\n\t\t\tvalue = Math.random() * 100;\r\n\t\t}\r\n\t\tconsole.log(newDate);\r\n\t\tdata.push({\r\n\t\t\tdate: `${months[(newDate.getMonth() - i) % 12]}`,\r\n\t\t\tvalue: value,\r\n\t\t});\r\n\t}\r\n\r\n\treturn data.reverse();\r\n};\r\n\r\nfunction Health() {\r\n\tconst padding = [20, 20, 45, 30];\r\n\tconst width = '70vw';\r\n\tconst height = '60vh';\r\n\r\n\tconst overallDataWeek = randomDataGen(7);\r\n\tconst overallDataMonth = randomDataGen(30);\r\n\tconst overallDataYear = randomDataYearGen();\r\n\tconsole.log(overallDataYear);\r\n\r\n\tconst tempDataWeek = randomDataGen(7, true);\r\n\tconst tempDataMonth = randomDataGen(30, true);\r\n\tconst tempDataYear = randomDataYearGen(true);\r\n\r\n\tconst mentalDataWeek = randomDataGen(7);\r\n\tconst mentalDataMonth = randomDataGen(30);\r\n\tconst mentalDataYear = randomDataYearGen();\r\n\r\n\tconst physicDataWeek = randomDataGen(7);\r\n\tconst physicDataMonth = randomDataGen(30);\r\n\tconst physicDataYear = randomDataYearGen();\r\n\r\n\t// console.log(randomDataWeek);\r\n\t// const randomDataMonth = randomDataGen(30)\r\n\t// const randomDataMonth = [];\r\n\r\n\tconst [overall, setOverall] = useState(overallDataWeek);\r\n\tconst [temp, setTemp] = useState(tempDataWeek);\r\n\tconst [mental, setMental] = useState(mentalDataWeek);\r\n\tconst [physic, setPhysic] = useState(physicDataWeek);\r\n\r\n\tconst [buttonsOverall, setButtonsOverall] = useState({\r\n\t\tweek: true,\r\n\t\tmonth: false,\r\n\t\tyear: false,\r\n\t});\r\n\tconst [buttonsTemp, setButtonsTemp] = useState({\r\n\t\tweek: true,\r\n\t\tmonth: false,\r\n\t\tyear: false,\r\n\t});\r\n\tconst [buttonsMental, setButtonsMental] = useState({\r\n\t\tweek: true,\r\n\t\tmonth: false,\r\n\t\tyear: false,\r\n\t});\r\n\tconst [buttonsPhysic, setButtonsPhysic] = useState({\r\n\t\tweek: true,\r\n\t\tmonth: false,\r\n\t\tyear: false,\r\n\t});\r\n\r\n\tconst title = {\r\n\t\tstyle: {\r\n\t\t\tfontSize: '15',\r\n\t\t\ttextAlign: 'center',\r\n\t\t\tfill: 'white',\r\n\t\t\tmarginTop: '20px',\r\n\t\t},\r\n\t};\r\n\r\n\tconst circularStyle = buildStyles({\r\n\t\tpathColor: '#FF5151',\r\n\t\ttextColor: '#FF5151',\r\n\t\ttextSize: '20px',\r\n\t});\r\n\r\n\t// OVERALL DATA HANDLERS\r\n\r\n\tconst toWeekOverall = () => {\r\n\t\tif (!buttonsOverall['week']) {\r\n\t\t\tsetButtonsOverall({ week: true, month: false, year: false });\r\n\t\t\tsetOverall(overallDataWeek);\r\n\t\t}\r\n\t\treturn;\r\n\t};\r\n\r\n\tconst toMonthOverall = () => {\r\n\t\tif (!buttonsOverall['month']) {\r\n\t\t\tsetButtonsOverall({ week: false, month: true, year: false });\r\n\t\t\tsetOverall(overallDataMonth);\r\n\t\t}\r\n\t\treturn;\r\n\t};\r\n\tconst toYearOverall = () => {\r\n\t\tif (!buttonsOverall['year']) {\r\n\t\t\tsetButtonsOverall({ week: false, month: false, year: true });\r\n\t\t\tsetOverall(overallDataYear);\r\n\t\t}\r\n\t\treturn;\r\n\t};\r\n\r\n\t// TEMP DATA HANDLERS\r\n\r\n\tconst toWeekTemp = () => {\r\n\t\tif (!buttonsTemp['week']) {\r\n\t\t\tsetButtonsTemp({ week: true, month: false, year: false });\r\n\t\t\tsetTemp(tempDataWeek);\r\n\t\t}\r\n\t\treturn;\r\n\t};\r\n\r\n\tconst toMonthTemp = () => {\r\n\t\tif (!buttonsTemp['month']) {\r\n\t\t\tsetButtonsTemp({ week: false, month: true, year: false });\r\n\t\t\tsetTemp(tempDataMonth);\r\n\t\t}\r\n\t\treturn;\r\n\t};\r\n\tconst toYearTemp = () => {\r\n\t\tif (!buttonsTemp['year']) {\r\n\t\t\tsetButtonsTemp({ week: false, month: false, year: true });\r\n\t\t\tsetTemp(tempDataYear);\r\n\t\t}\r\n\t\treturn;\r\n\t};\r\n\r\n\t// MENTAL DATA HANDLERS\r\n\r\n\tconst toWeekMental = () => {\r\n\t\tif (!buttonsMental['week']) {\r\n\t\t\tsetButtonsMental({ week: true, month: false, year: false });\r\n\t\t\tsetMental(mentalDataWeek);\r\n\t\t}\r\n\t\treturn;\r\n\t};\r\n\r\n\tconst toMonthMental = () => {\r\n\t\tif (!buttonsMental['month']) {\r\n\t\t\tsetButtonsMental({ week: false, month: true, year: false });\r\n\t\t\tsetMental(mentalDataMonth);\r\n\t\t}\r\n\t\treturn;\r\n\t};\r\n\tconst toYearMental = () => {\r\n\t\tif (!buttonsMental['year']) {\r\n\t\t\tsetButtonsMental({ week: false, month: false, year: true });\r\n\t\t\tsetMental(mentalDataYear);\r\n\t\t}\r\n\t\treturn;\r\n\t};\r\n\r\n\t// PHYSIC DATA HANDLERS\r\n\r\n\tconst toWeekPhysic = () => {\r\n\t\tif (!buttonsPhysic['week']) {\r\n\t\t\tsetButtonsPhysic({ week: true, month: false, year: false });\r\n\t\t\tsetPhysic(physicDataWeek);\r\n\t\t}\r\n\t\treturn;\r\n\t};\r\n\r\n\tconst toMonthPhysic = () => {\r\n\t\tif (!buttonsPhysic['month']) {\r\n\t\t\tsetButtonsPhysic({ week: false, month: true, year: false });\r\n\t\t\tsetPhysic(physicDataMonth);\r\n\t\t}\r\n\t\treturn;\r\n\t};\r\n\tconst toYearPhysic = () => {\r\n\t\tif (!buttonsPhysic['year']) {\r\n\t\t\tsetButtonsPhysic({ week: false, month: false, year: true });\r\n\t\t\tsetPhysic(physicDataYear);\r\n\t\t}\r\n\t\treturn;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={modules.container}>\r\n\t\t\t{/* <div className={modules.header}>\r\n                            \r\n            </div> */}\r\n            <img src={Logo} alt=\"\"/>\r\n            <p className={modules.title}>Health Monitoring</p>\r\n\r\n\t\t\t<div className={modules.progressBars}>\r\n\t\t\t\t<div>\r\n                    <ChangingProgressProvider\r\n                    \t\t\t\t\tvalues={[0, overall.slice(-1)[0]['value'].toFixed(2)]}\r\n                    \t\t\t\t>\r\n                    \t\t\t\t\t{(percentage) => (\r\n                    \t\t\t\t\t\t<CircularProgressbar\r\n                    \t\t\t\t\t\t\tvalue={percentage}\r\n                    \t\t\t\t\t\t\ttext={`${percentage}%`}\r\n                    \t\t\t\t\t\t\tstyles={circularStyle}\r\n                    \t\t\t\t\t\t/>\r\n                    \t\t\t\t\t)}\r\n                    \t\t\t\t</ChangingProgressProvider>\r\n                                    <p>Overall</p>\r\n                </div>\r\n                <div>\r\n                    <ChangingProgressProvider\r\n    \t\t\t\t\tvalues={[0, temp.slice(-1)[0]['value'].toFixed(2)]}\r\n    \t\t\t\t>\r\n    \t\t\t\t\t{(percentage) => (\r\n    \t\t\t\t\t\t<CircularProgressbar\r\n                            value={percentage}\r\n                            text={`${percentage}°C`}\r\n                            minValue={34}\r\n                            maxValue={39}\r\n                            styles={circularStyle}\r\n                        />\r\n    \t\t\t\t\t)}\r\n    \t\t\t\t</ChangingProgressProvider>\r\n                    <p>Temperature</p>\r\n                </div>\r\n                <div>\r\n                    <ChangingProgressProvider\r\n    \t\t\t\t\tvalues={[0, mental.slice(-1)[0]['value'].toFixed(2)]}\r\n    \t\t\t\t>\r\n    \t\t\t\t\t{(percentage) => (\r\n    \t\t\t\t\t\t<CircularProgressbar\r\n                            value={percentage}\r\n                            text={`${percentage}%`}\r\n                            styles={circularStyle}\r\n                        />\r\n    \t\t\t\t\t)}\r\n    \t\t\t\t</ChangingProgressProvider>\r\n                    <p>Mental</p>\r\n                </div>\r\n                <div>\r\n                    <ChangingProgressProvider\r\n    \t\t\t\t\tvalues={[0, physic.slice(-1)[0]['value'].toFixed(2)]}\r\n    \t\t\t\t>\r\n    \t\t\t\t\t{(percentage) => (\r\n    \t\t\t\t\t\t<CircularProgressbar\r\n                            value={percentage}\r\n                            text={`${percentage}%`}\r\n                            styles={circularStyle}\r\n                        />\r\n    \t\t\t\t\t)}\r\n    \t\t\t\t</ChangingProgressProvider>\r\n                    <p>Physical</p>\r\n                </div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={modules.container_chart}>\r\n\t\t\t\t<div className={modules.chartTitle}>\r\n\t\t\t\t\t<span>Overall</span>\r\n\t\t\t\t\t<span>{`${overall.slice(-1)[0]['value'].toFixed(2)}`}</span>\r\n\t\t\t\t</div>\r\n                <p className={modules.description}>General health condition percentage based on values of temperature, mental state and physical condition</p>\r\n\r\n\t\t\t\t<Chart\r\n\t\t\t\t\tpadding={padding}\r\n\t\t\t\t\tautoFit\r\n\t\t\t\t\twidth={width}\r\n\t\t\t\t\theight={height}\r\n\t\t\t\t\tdata={overall}\r\n\t\t\t\t\tscale={{ value: { min: 0, max: 100 } }}\r\n\t\t\t\t\tonLineMouseleave={console.log}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Line position='date*value' style={{ stroke: '#FF5151' }} />\r\n\t\t\t\t\t<Point position='date*value' />\r\n\t\t\t\t\t<Tooltip showCrosshairs lock triggerOn='click' />\r\n\t\t\t\t\t<Axis name='value' title={title} />\r\n\t\t\t\t</Chart>\r\n\t\t\t\t<p className={modules.dateLabel}>date</p>\r\n\t\t\t\t<div className={modules.buttons}>\r\n\t\t\t\t\t<Button onClick={toWeekOverall} active={buttonsOverall['week']}>\r\n\t\t\t\t\t\tWeek\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={toMonthOverall} active={buttonsOverall['month']}>\r\n\t\t\t\t\t\tMonth\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={toYearOverall} active={buttonsOverall['year']}>\r\n\t\t\t\t\t\tYear\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={modules.container_chart}>\r\n\t\t\t\t<div className={modules.chartTitle}>\r\n\t\t\t\t\t<span>Body temperature</span>\r\n\t\t\t\t\t<span>{`${temp.slice(-1)[0]['value'].toFixed(2)}`}</span>\r\n\t\t\t\t</div>\r\n                <p className={modules.description}>Body temperature values provided by special equipment</p>\r\n\r\n\t\t\t\t<Chart\r\n\t\t\t\t\tpadding={padding}\r\n\t\t\t\t\tautoFit\r\n\t\t\t\t\twidth={width}\r\n\t\t\t\t\theight={height}\r\n\t\t\t\t\tdata={temp}\r\n\t\t\t\t\tscale={{ value: { min: 34, max: 39 } }}\r\n\t\t\t\t\tonLineMouseleave={console.log}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Line position='date*value' style={{ stroke: '#FF5151' }} />\r\n\t\t\t\t\t<Point position='date*value' />\r\n\t\t\t\t\t<Tooltip showCrosshairs lock triggerOn='click' />\r\n\t\t\t\t\t<Axis name='value' title={title} />\r\n\t\t\t\t</Chart>\r\n\t\t\t\t<p className={modules.dateLabel}>date</p>\r\n\t\t\t\t<div className={modules.buttons}>\r\n\t\t\t\t\t<Button onClick={toWeekTemp} active={buttonsTemp['week']}>\r\n\t\t\t\t\t\tWeek\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={toMonthTemp} active={buttonsTemp['month']}>\r\n\t\t\t\t\t\tMonth\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={toYearTemp} active={buttonsTemp['year']}>\r\n\t\t\t\t\t\tYear\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={modules.container_chart}>\r\n\t\t\t\t<div className={modules.chartTitle}>\r\n\t\t\t\t\t<span>Mental state</span>\r\n\t\t\t\t\t<span>{`${mental.slice(-1)[0]['value'].toFixed(2)}`}</span>\r\n\t\t\t\t</div>\r\n                <p className={modules.description}>Mental state values based on answers from daily frame of mind form</p>\r\n\r\n\t\t\t\t<Chart\r\n\t\t\t\t\tpadding={padding}\r\n\t\t\t\t\tautoFit\r\n\t\t\t\t\twidth={width}\r\n\t\t\t\t\theight={height}\r\n\t\t\t\t\tdata={mental}\r\n\t\t\t\t\tscale={{ value: { min: 0, max: 100 } }}\r\n\t\t\t\t\tonLineMouseleave={console.log}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Line position='date*value' style={{ stroke: '#FF5151' }} />\r\n\t\t\t\t\t<Point position='date*value' />\r\n\t\t\t\t\t<Tooltip showCrosshairs lock triggerOn='click' />\r\n\t\t\t\t\t<Axis name='value' title={title} />\r\n\t\t\t\t</Chart>\r\n\t\t\t\t<p className={modules.dateLabel}>date</p>\r\n\t\t\t\t<div className={modules.buttons}>\r\n\t\t\t\t\t<Button onClick={toWeekMental} active={buttonsMental['week']}>\r\n\t\t\t\t\t\tWeek\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={toMonthMental} active={buttonsMental['month']}>\r\n\t\t\t\t\t\tMonth\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={toYearMental} active={buttonsMental['year']}>\r\n\t\t\t\t\t\tYear\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={modules.container_chart}>\r\n\t\t\t\t<div className={modules.chartTitle}>\r\n\t\t\t\t\t<span>Physical condition</span>\r\n\t\t\t\t\t<span>{`${physic.slice(-1)[0]['value'].toFixed(2)}`}</span>\r\n\t\t\t\t</div>\r\n                <p className={modules.description}>Physical condition values based on data provided by special equipment</p>\r\n\r\n\t\t\t\t<Chart\r\n\t\t\t\t\tpadding={padding}\r\n\t\t\t\t\tautoFit\r\n\t\t\t\t\twidth={width}\r\n\t\t\t\t\theight={height}\r\n\t\t\t\t\tdata={physic}\r\n\t\t\t\t\tscale={{ value: { min: 0, max: 100 } }}\r\n\t\t\t\t\tonLineMouseleave={console.log}\r\n\t\t\t\t>\r\n\t\t\t\t\t{/* {console.log(Object.keys(physic)[0])} */}\r\n\t\t\t\t\t<Line position='date*value' style={{ stroke: '#FF5151' }} />\r\n\t\t\t\t\t<Point position='date*value' />\r\n\t\t\t\t\t<Tooltip showCrosshairs lock triggerOn='click' />\r\n\t\t\t\t\t<Axis name='value' title={title} />\r\n\t\t\t\t</Chart>\r\n\t\t\t\t<p className={modules.dateLabel}>date</p>\r\n\t\t\t\t<div className={modules.buttons}>\r\n\t\t\t\t\t<Button onClick={toWeekPhysic} active={buttonsPhysic['week']}>\r\n\t\t\t\t\t\tWeek\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={toMonthPhysic} active={buttonsPhysic['month']}>\r\n\t\t\t\t\t\tMonth\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={toYearPhysic} active={buttonsPhysic['year']}>\r\n\t\t\t\t\t\tYear\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t// <div className={modules.container}></div>\r\n\t);\r\n}\r\n\r\nexport default Health;\r\n","import React from 'react'\r\nimport {\r\n    G2,\r\n    Chart,\r\n    Tooltip,\r\n    Interval,\r\n} from \"bizcharts\";\r\nimport classes from \"./FoodChart.module.css\"\r\n\r\nfunction FoodChart(props) {\r\n    return (\r\n        <div className={classes.containerChart}>\r\n            <Chart height={400} width={700} padding=\"auto\" data={props.data} autoFit>\r\n                <Interval\r\n                    adjust={[\r\n                        {\r\n                            type: 'dodge',\r\n                            marginRatio: 0,\r\n                        },\r\n                    ]}\r\n                    color={['mode', ['#FF5F5F', '#A0B4FF']]}                    \r\n                    position=\"type*value\"\r\n                />\r\n                <Tooltip shared />\r\n            </Chart>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodChart\r\n","import React from 'react'\r\nimport style from './Nutrition.module.css'\r\n\r\nfunction Nutrition(props) {\r\n    return (\r\n        <>\r\n            <span className={style.calories}>calories <br/> {props.calories}</span>\r\n            <span className={style.carbon}>carbs <br/> {props.carbon}</span>\r\n            <span className={style.fat}>fat <br/> {props.fat}</span>\r\n            <span className={style.protein}>protein <br/> {props.protein}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nutrition\r\n","import React from 'react'\r\nimport style from './Item.module.css'\r\nimport Nutrition from './Nutrition';\r\n\r\nfunction Item(props) {\r\n    return (\r\n        <li className={style.foodItem}>\r\n            {props.item.checked ? <button className={style.checkbox} style={{backgroundColor: '#FF5F5F'}} onClick={() => props.click(props.index)}>&nbsp;</button> \r\n            : <button className={style.checkbox} style={{backgroundColor:  'white'}} onClick={() => props.click(props.index)}>&nbsp;</button>}\r\n            \r\n            <div className={style.resContainer}>\r\n                <span className={style.time}>{props.item.hour}</span>\r\n                \r\n                <span className={style.itemName}>\r\n                    {props.item.name}\r\n                </span>\r\n\r\n                <div className={style.nutrition}>\r\n                    {props.item.type === \"water\" ? <h3 className={style.ml}>{props.item.ml}ml</h3>\r\n                    : <Nutrition \r\n                        calories={props.item.calories}\r\n                        fat={props.item.fat}\r\n                        protein={props.item.protein}\r\n                        carbon={props.item.carbon}\r\n                    ></Nutrition>}\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import React from 'react'\r\nimport style from './Food.module.css'\r\nimport Item from './Item'\r\n\r\nfunction FoodList(props) {\r\n    const foodHandler = (item, index) => {\r\n        return <Item item={item} index={index} click={() => props.checkHandlerButton(index)}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.foodContainer}>\r\n            <h1 className={style.day}>Current day</h1>\r\n            <ul className={style.foodList}>\r\n                {props.food.map((item, index) => {\r\n                    return foodHandler(item, index);\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodList\r\n","import { Label } from 'bizcharts'\r\nimport React from 'react'\r\nimport { useState } from 'react/cjs/react.development'\r\nimport classes from './PersonInfo.module.css'\r\nimport style from './PersonInfo.module.css'\r\n\r\nfunction PersonInfo(props) {\r\n    return (\r\n        <div className={style.PersonInfo} onSubmit={props.submit}>\r\n            <form className={style.PersonInfoForm}>\r\n                <div>\r\n                    <label id=\"age\">Age </label>\r\n                    <input onChange={props.handleAgeChange} className={style.styledInput} htmlFor=\"age\" type=\"number\" min=\"0\" max=\"140\" placeholder=\"age\" defaultValue=\"18\" required/> years\r\n                </div>\r\n\r\n                <div>\r\n                    <label id=\"heigth\">Height </label>\r\n                    <input onChange={props.handleHeightChange} className={style.styledInput} htmlFor=\"height\" type=\"number\" min=\"100\" max=\"250\" placeholder=\"height\"  defaultValue=\"175\" required/> cm\r\n                </div>\r\n\r\n                <div>\r\n                    <label id=\"weight\">Weight </label>\r\n                    <input onChange={props.handleWeightChange} className={style.styledInput} htmlFor=\"weight\" type=\"number\" min=\"30\" max=\"200\" placeholder=\"weight\" defaultValue=\"80\" required/> kg\r\n                </div>\r\n\r\n                <div className={style.genderOption}>\r\n                    <label id=\"gender\">Gender</label>\r\n                    <input onChange={props.handleGenderChange} type=\"radio\" name=\"gender\" id=\"man\" />\r\n                    <label htmlFor=\"man\">M</label>\r\n                    <input type=\"radio\" name=\"gender\" id=\"woman\" />\r\n                    <label onChange={props.handleGenderChange} htmlFor=\"woman\">W</label>\r\n                </div>\r\n\r\n                <div className={style.submitOptions}>\r\n                    <input className={style.styledInputButton} type=\"reset\" value=\"Reset\" />\r\n                    <input className={style.styledInputButton} type=\"submit\" value=\"Submit\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonInfo\r\n","export default class Nutritions {\r\n    constructor(fluid, calories, proteins, carbs, fats) {\r\n        this.fluid = parseFloat(fluid);\r\n        this.calories = parseFloat(calories);\r\n        this.proteins = parseFloat(proteins);\r\n        this.carbs = parseFloat(carbs);\r\n        this.fats = parseFloat(fats);\r\n    }\r\n\r\n    getFluid() {\r\n        return this.fluid;\r\n    }\r\n\r\n    setFluid(val) {\r\n        this.fluid = val;\r\n    }\r\n\r\n    getCalories() {\r\n        return this.calories;\r\n    }\r\n\r\n    setCalories(val) {\r\n        this.calories = val;\r\n    }\r\n\r\n    getProteins() {\r\n        return this.proteins;\r\n    }\r\n\r\n    setProteins(val) {\r\n        this.proteins = val;\r\n    }\r\n\r\n    getCarbs() {\r\n        return this.carbs;\r\n    }\r\n\r\n    setCarbs(val) {\r\n        this.carbs = val;\r\n    }\r\n\r\n    getFats() {\r\n        return this.fats;\r\n    }\r\n\r\n    setFats(val) {\r\n        this.fats = val;\r\n    }\r\n}","import Nutritions from './Nutritions.js'\r\n\r\nexport default class Food {\r\n    constructor(name, type, fluid, calories, proteins, carbs, fats) {\r\n        this.name = name;\r\n        this.type = type;\r\n        this.nutritions = new Nutritions(fluid, calories, proteins, carbs, fats);\r\n    }\r\n\r\n    getName() {\r\n        return this.name\r\n    }\r\n\r\n    getType() {\r\n        return this.type;\r\n    }\r\n\r\n    getNutritions() {\r\n        return this.nutritions;\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/food_edited.5cd6b866.csv\";","import Food from './Food.js'\r\nimport Food_edited from './food_edited.csv'\r\n\r\nasync function csvJSON(path) {\r\n    return fetch(Food_edited).then(response => response.text()).then(csv => {\r\n        var lines = csv.split(\"\\n\");\r\n\r\n        var result = [];\r\n\r\n        var headers = lines[0].split(\",\");\r\n        headers[headers.length - 1] = headers[headers.length - 1].replace('\\r', '');\r\n\r\n        for (var i = 1; i < lines.length; i++) {\r\n\r\n            var obj = {};\r\n            var currentline = lines[i].split(\",\");\r\n\r\n            for (var j = 0; j < headers.length; j++) {\r\n                obj[headers[j]] = currentline[j];\r\n            }\r\n\r\n            result.push(obj);\r\n\r\n        }\r\n\r\n        return result; //JavaScript object\r\n        //return JSON.stringify(result); //JSON\r\n    });\r\n}\r\n\r\nexport default class FoodDatabase {\r\n    constructor() {\r\n        //add connection to database\r\n    }\r\n\r\n    async init() {\r\n        let foodJson = await csvJSON('food_edited.csv');\r\n        this.foodArray = [];\r\n        foodJson.forEach(element => {\r\n            this.foodArray.push(new Food(element['id'], element['group'], element['water'], element['calories'], element['protein'], element['carbohydrate'], element['fat']));\r\n        });\r\n\r\n        this.foodArray.pop();\r\n        this.water = new Food('Water', 'Water', 237, 0, 0, 0, 0);\r\n    }\r\n\r\n    getFoodList() {\r\n        //(name, fluid, calories, proteins, carbs, fat)\r\n        // return [\r\n        //     new Food('scrambled eggs', 141, 273, 18.3, 2.9, 20.1),\r\n        //     new Food('portion of water', 237, 0, 0, 0, 0),\r\n        //     new Food('crackers', 237, 0, 0, 0, 0),\r\n        // ];\r\n        return this.foodArray;\r\n    }\r\n\r\n    getWater() {\r\n        return this.water;\r\n    }\r\n\r\n    addFood(food) {\r\n        throw 'NotImplementedError';\r\n    }\r\n\r\n    removeFood(name) {\r\n        throw 'Parameter is not a number!';\r\n    }\r\n\r\n}","export function shuffle(array) {\r\n    var currentIndex = array.length,\r\n        temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport function randomTime(start_hour, end_hour) {\r\n    var hrs = Math.round(Math.random() * (end_hour - start_hour + 1)) + start_hour;\r\n    var mins = Math.round(Math.random() * 60);\r\n    return { 'hours': hrs, 'minutes': mins };\r\n}","import Food from './Food.js'\r\nimport Nutritions from './Nutritions.js';\r\nimport FoodDatabase from './FoodDatabase.js';\r\nimport { shuffle, randomTime } from './utils';\r\n\r\nvar DEBUG = false;\r\n\r\n\r\nclass FoodPlanner {\r\n    constructor() {\r\n        this.foodDatabase = new FoodDatabase();\r\n    }\r\n    async init() {\r\n        await this.foodDatabase.init();\r\n    }\r\n\r\n    static calculateRMR(age, weight, height, gender) {\r\n        switch (gender) {\r\n            case 'male':\r\n                return (10 * weight) + (6.25 * height) - (5 * age) + 5;\r\n            case 'female':\r\n                return (10 * weight) + (6.25 * height) - (5 * age) - 161\r\n        }\r\n    }\r\n\r\n    static calculateDailyCalories(age, weight, height, gender, activity_factor = 1.4) {\r\n        return this.calculateRMR(age, weight, height, gender) * activity_factor;\r\n    }\r\n\r\n    static calculateRequiredNutrition(age, weight, height, gender, activity_factor = 1.4) {\r\n        var dailyCalories = this.calculateDailyCalories(age, weight, height, gender, activity_factor);\r\n        var fluid = weight * activity_factor / 32.0 * 1000;\r\n        var calories = dailyCalories;\r\n        var proteins = Math.round(dailyCalories * 0.25) / 4.0;\r\n        var carbs = Math.round(dailyCalories * 0.5) / 4.0;\r\n        var fats = Math.round(dailyCalories * 0.25) / 9.0;\r\n        return new Nutritions(fluid, calories, proteins, carbs, fats);\r\n    }\r\n\r\n    static calculateFoodRank(leftNutritions, food) {\r\n        var nutritions = food.getNutritions();\r\n\r\n        var leftCalories = Math.max(0, leftNutritions.getCalories());\r\n        var leftProteins = Math.max(0, leftNutritions.getProteins());\r\n        var leftCarbs = Math.max(0, leftNutritions.getCarbs());\r\n        var leftFats = Math.max(0, leftNutritions.getFats());\r\n\r\n        var neededSum = leftCalories + leftProteins + leftCarbs + leftFats;\r\n\r\n        var caloriesFactor = nutritions.getCalories() * leftCalories / neededSum;\r\n        var proteinsFactor = nutritions.getProteins() * leftProteins / neededSum;\r\n        var carbsFactor = nutritions.getCarbs() * leftCarbs / neededSum;\r\n        var fatsFactor = nutritions.getFats() * leftFats / neededSum;\r\n\r\n        var priorityValue = caloriesFactor + proteinsFactor + carbsFactor + fatsFactor;\r\n\r\n        var excessiveWater = Math.max(0, nutritions.getFluid() - Math.max(0, leftNutritions.getFluid()));\r\n        var excessiveCalories = Math.max(0, nutritions.getCalories() - Math.max(0, leftNutritions.getCalories()));\r\n        var excessiveProteins = Math.max(0, nutritions.getProteins() - Math.max(0, leftNutritions.getProteins()));\r\n        var excessiveCarbs = Math.max(0, nutritions.getCarbs() - Math.max(0, leftNutritions.getCarbs()));\r\n        var excessiveFats = Math.max(0, nutritions.getFats() - Math.max(0, leftNutritions.getFats()));\r\n        var excessiveSum = excessiveCalories + excessiveFats + excessiveCarbs + excessiveProteins;\r\n        return excessiveSum - priorityValue * 0.1;\r\n    }\r\n\r\n    generateDailyMenu(age, weight, height, gender, activity_factor = 1.4, n = 40) {\r\n        var left_nutritions = this.constructor.calculateRequiredNutrition(age, weight, height, gender, activity_factor);\r\n        if (DEBUG) console.log('Zapotrzebowanie: ', left_nutritions);\r\n        var return_food = [];\r\n        var food_array = this.foodDatabase.getFoodList();\r\n        if (DEBUG) console.log('CSV: ', food_array);\r\n\r\n        var iterations = 20;\r\n\r\n        while (iterations > 0) {\r\n            iterations--;\r\n            food_array = shuffle(food_array);\r\n            var foods = food_array.slice(0, n);\r\n            var best_value = Infinity;\r\n            var best_index = 0;\r\n            for (var i = 0; i < n; i++) {\r\n                var rank = this.constructor.calculateFoodRank(left_nutritions, foods[i]);\r\n                if (rank < best_value) {\r\n                    best_value = rank;\r\n                    best_index = i;\r\n\r\n                }\r\n            }\r\n\r\n            var selected_food = foods[best_index];\r\n            return_food.push([randomTime(9, 21), selected_food]);\r\n\r\n            left_nutritions.setFluid(left_nutritions.getFluid() - selected_food.getNutritions().getFluid());\r\n            left_nutritions.setCalories(left_nutritions.getCalories() - selected_food.getNutritions().getCalories());\r\n            left_nutritions.setProteins(left_nutritions.getProteins() - selected_food.getNutritions().getProteins());\r\n            left_nutritions.setCarbs(left_nutritions.getCarbs() - selected_food.getNutritions().getCarbs());\r\n            left_nutritions.setFats(left_nutritions.getFats() - selected_food.getNutritions().getFats());\r\n\r\n            if (left_nutritions.getCalories() <= 0 && left_nutritions.getProteins() <= 0 &&\r\n                left_nutritions.getCarbs() <= 0 && left_nutritions.getFats() <= 0)\r\n                break;\r\n        }\r\n\r\n        var water = this.foodDatabase.getWater();\r\n        while (left_nutritions.getFluid() > 0) {\r\n            return_food.push([randomTime(8, 22), water]);\r\n            left_nutritions.setFluid(left_nutritions.getFluid() - water.getNutritions().getFluid());\r\n        }\r\n\r\n        return_food.sort(function(a, b) {\r\n            // compare hours first\r\n            if (a[0].hours < b[0].hours) return -1;\r\n            if (a[0].hours > b[0].hours) return 1;\r\n\r\n            // else a.hour === b.hour, so compare minutes to break the tie\r\n            if (a[0].minutes < b[0].minutes) return -1;\r\n            if (a[0].minutes > b[0].minutes) return 1;\r\n\r\n            // couldn't break the tie\r\n            return 0;\r\n        });\r\n\r\n\r\n        if (DEBUG) console.log('Bilans: ', left_nutritions);\r\n        return return_food;\r\n    }\r\n}\r\n\r\nexport function getRequiredNutrition({age, weight, height, gender}) {\r\n    return FoodPlanner.calculateRequiredNutrition(age, weight, height, gender);\r\n}\r\n\r\nexport async function getDailyMenu({age, weight, height, gender}) {\r\n    var foodPlanner = new FoodPlanner();\r\n    await foodPlanner.init();\r\n    return foodPlanner.generateDailyMenu(age, weight, height, gender);\r\n}","import React, { useState, useEffect } from 'react'\r\nimport FoodChart from './FoodChart';\r\nimport style from './Food.module.css';\r\nimport Item from './Item';\r\nimport FoodList from './FoodList';\r\nimport PersonInfo from './PersonInfo';\r\nimport {getDailyMenu, getRequiredNutrition} from \"../../algorithms/foodPlanner/FoodPlanner\";\r\n\r\nfunction Food() {\r\n    const [value, setvalue] = useState(new Date());\r\n    const [food, setFood] = useState([]);\r\n    const [person, setPerson] = useState(\r\n        {\r\n            weight: 80,\r\n            height: 180,\r\n            gender: 'male',\r\n            age: 21\r\n        });\r\n    const [modalVisible, setModalVisible] = useState(true);\r\n    const [reqNutrition, setReqNutrition] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(\r\n            () => setvalue(new Date()),\r\n            1000\r\n        );\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        }\r\n    }, []);\r\n\r\n    function addZero(i) {\r\n        if (i < 10) {\r\n          i = \"0\" + i;\r\n        }\r\n        return i;\r\n    }\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        setModalVisible(false)\r\n\r\n        const reqNut =  getRequiredNutrition(person);\r\n        const dailyMenu = await getDailyMenu(person);\r\n\r\n        console.log(reqNut);\r\n        console.log(dailyMenu);\r\n\r\n        const foodList = [];\r\n\r\n        dailyMenu.forEach(element => {\r\n            if(element[1].name != \"Water\")\r\n            {\r\n                foodList.push(\r\n                    {\r\n                        type: \"food\",\r\n                        hour: `${addZero(element[0].hours)}:${addZero(element[0].minutes)}`,\r\n                        name: element[1].name,\r\n                        calories: element[1].nutritions.calories,\r\n                        protein: element[1].nutritions.proteins,\r\n                        carbon: element[1].nutritions.carbs,\r\n                        fat: element[1].nutritions.fats,\r\n                        checked: false\r\n                    }\r\n                )\r\n            }\r\n            else {\r\n                foodList.push(\r\n                    {\r\n                        type: \"water\",\r\n                        name: \"water\",\r\n                        hour: `${addZero(element[0].hours)}:${addZero(element[0].minutes)}`,\r\n                        ml: element[1].nutritions.fluid,\r\n                        checked: false\r\n                    }\r\n                )\r\n            }\r\n        });\r\n\r\n        setFood(foodList);\r\n\r\n        const chartData = [\r\n            {\r\n                type: 'calories',\r\n                value: reqNut.calories,\r\n                mode: 'goal',\r\n                color: '#FF5F5F'\r\n            },\r\n            {\r\n                type: 'water',\r\n                value:  reqNut.fluid ,\r\n                mode: 'goal',\r\n                color: '#A0B4FF'\r\n            },\r\n            {\r\n                type: 'fat',\r\n                value: reqNut.fats,\r\n                mode: 'goal',\r\n                color: '#FDFF90'\r\n            },\r\n            {\r\n                type: 'protein',\r\n                value: reqNut.proteins,\r\n                mode: 'goal',\r\n                color: '#695959'\r\n            },\r\n            {\r\n                type: 'carbs',\r\n                value:  reqNut.carbs,\r\n                mode: 'goal',\r\n                color: '#D3D3D3'\r\n            }\r\n        ];\r\n\r\n        setReqNutrition(chartData);\r\n    }\r\n\r\n    const handleGenderChange = (event) => {\r\n        console.log(event);\r\n\r\n        const personClone = {...person};\r\n\r\n        if(event.target.id === \"man\") {\r\n            personClone.gender = \"male\";\r\n        }\r\n        else if(event.target.id === \"woman\") {\r\n            personClone.gender = \"female\";\r\n        }\r\n        \r\n        setPerson(personClone);\r\n    }\r\n\r\n    const handleWeightChange= (event) => {\r\n        console.log(\"Weight changed\");\r\n\r\n        const personClone = {...person};\r\n\r\n        personClone.weight = event.target.value;\r\n\r\n        setPerson(personClone);\r\n    }\r\n\r\n    const handleHeightChange = (event) => {\r\n        console.log(\"Weight changed\");\r\n\r\n        const personClone = {...person};\r\n\r\n        personClone.height = event.target.value;\r\n\r\n        setPerson(personClone);\r\n    }\r\n    const handleAgeChange = (event) => {\r\n        console.log(\"Age changed\");\r\n\r\n        const personClone = {...person};\r\n\r\n        personClone.age = event.target.value;\r\n\r\n        setPerson(personClone);\r\n    }\r\n\r\n    const calculateFoodResources = () => {\r\n        let calories = 0;\r\n        let fat = 0;\r\n        let protein = 0;\r\n        let water = 0;\r\n        let carbon = 0;\r\n\r\n        food.forEach(item => {\r\n            if(item.checked)\r\n            {\r\n                if (item.type === 'water') {\r\n                    water += parseInt(item.ml);\r\n                }\r\n                else if (item.type === 'food') {\r\n                    calories += parseInt(item.calories);\r\n                    fat += parseInt(item.fat);\r\n                    protein += parseInt(item.protein);\r\n                    carbon += parseInt(item.carbon);\r\n                }\r\n            }\r\n        });\r\n\r\n        return [\r\n            {\r\n                type: 'calories',\r\n                value: calories,\r\n                color: '#FF5F5F',\r\n                mode: 'current'\r\n            },\r\n            {\r\n                type: 'water',\r\n                value: water,\r\n                color: '#A0B4FF',\r\n                mode: 'current'\r\n            },\r\n            {\r\n                type: 'fat',\r\n                value: fat,\r\n                color: '#FDFF90',\r\n                mode: 'current'\r\n            },\r\n            {\r\n                type: 'protein',\r\n                value: protein,\r\n                color: '#695959',\r\n                mode: 'current'\r\n            },\r\n            {\r\n                type: 'carbs',\r\n                value: carbon,\r\n                color: '#D3D3D3',\r\n                mode: 'current'\r\n            }\r\n        ];\r\n    }\r\n\r\n    const checkHandlerButton = (index) => {\r\n        const foodListCopy = [...food];\r\n\r\n        foodListCopy[index].checked = !foodListCopy[index].checked;\r\n\r\n        setFood(foodListCopy);\r\n        calculateFoodResources();\r\n    }\r\n\r\n    const foodRes = calculateFoodResources();\r\n\r\n    return (\r\n        <>\r\n        {modalVisible && <PersonInfo \r\n            handleHeightChange={handleHeightChange}\r\n            handleWeightChange={handleWeightChange}\r\n            handleGenderChange={handleGenderChange}\r\n            handleAgeChange={handleAgeChange}\r\n            submit={submitHandler}\r\n        />}\r\n        <section className={style.sectionFood}>\r\n            <div className={style.resourceContainer}>\r\n                <h3 className={style.currentHour}>Current hour <span className={style.hour}>{value.getHours()}:{addZero(value.getMinutes())}</span></h3>\r\n                <div className={style.list}>\r\n                    {foodRes.map((item, index) => {\r\n                        return <div className={style.resource} key={index}>\r\n                            <h5 className={style.itemType}>{item.type} </h5>\r\n                            <h6 className={style.resValue} style={{ backgroundColor: `${item.color}` }}>{item.value}</h6>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n                <FoodChart data={[...foodRes, ...reqNutrition]} />\r\n            </div>\r\n\r\n            <FoodList food={food} checkHandlerButton={checkHandlerButton}/>\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Food\r\n","export default __webpack_public_path__ + \"static/media/track.b751de5c.svg\";","import React from \"react\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport styles from \"./SleepStages.module.scss\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nconst SleepStages = (props) => {\r\n  const convertTime = (minutes) => {\r\n    const hours = parseInt(minutes / 60);\r\n    const mins = minutes - hours * 60;\r\n\r\n    return hours > 0 ? `${hours}h ${mins}m` : `${mins}m`;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>{props.title}</h2>\r\n      <div className={styles.progressBar}>\r\n        <CircularProgressbar\r\n          value={props.minutes}\r\n          minValue={0}\r\n          maxValue={props.sleepTime}\r\n          text={convertTime(props.minutes)}\r\n          styles={buildStyles({\r\n            textColor: \"white\",\r\n            pathColor: \"white\",\r\n            trailColor: \"#CAC7C7\",\r\n          })}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SleepStages;\r\n","import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport styles from \"./VideoContainer.module.scss\";\r\n\r\nexport default function VideoContainer() {\r\n  return (\r\n    <div className={styles.videoContainer}>\r\n      <h1>How to sleep in space? </h1>\r\n      <div className={styles.videos}>\r\n        <div className={styles.video}>\r\n          <ReactPlayer\r\n            url=\"https://www.youtube.com/watch?v=dFObkgmkxpw\"\r\n            controls\r\n          />\r\n        </div>\r\n        <div className={styles.video}>\r\n          <ReactPlayer\r\n            url=\"https://www.youtube.com/watch?v=UyFYgeE32f0\"\r\n            controls\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Sleep.module.scss\";\r\nimport trackImage from \"../../assets/track.svg\";\r\nimport { Chart, Line, Point, Tooltip, Axis, Legend } from \"bizcharts\";\r\nimport SleepStages from \"./SleepStages/SleepStages\";\r\nimport VideoContainer from \"./VideoContainer/VideoContainer\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Sleep() {\r\n  const dataWeek = [\r\n    {\r\n      day: \"24.11\",\r\n      time: 7.5,\r\n    },\r\n    {\r\n      day: \"25.11\",\r\n      time: 8.5,\r\n    },\r\n    {\r\n      day: \"26.11\",\r\n      time: 6,\r\n    },\r\n    {\r\n      day: \"27.11\",\r\n      time: 7,\r\n    },\r\n    {\r\n      day: \"28.11\",\r\n      time: 10,\r\n    },\r\n    {\r\n      day: \"29.11\",\r\n      time: 8,\r\n    },\r\n    {\r\n      day: \"30.11\",\r\n      time: 8,\r\n    },\r\n  ];\r\n\r\n  const dataMonth = [\r\n    {\r\n      day: \"1.11\",\r\n      time: 5,\r\n    },\r\n    {\r\n      day: \"2.11\",\r\n      time: 5,\r\n    },\r\n    {\r\n      day: \"3.11\",\r\n      time: 6,\r\n    },\r\n    {\r\n      day: \"4.11\",\r\n      time: 7.5,\r\n    },\r\n    {\r\n      day: \"5.11\",\r\n      time: 8.5,\r\n    },\r\n    {\r\n      day: \"6.11\",\r\n      time: 6,\r\n    },\r\n    {\r\n      day: \"7.11\",\r\n      time: 7,\r\n    },\r\n    {\r\n      day: \"8.11\",\r\n      time: 10,\r\n    },\r\n    {\r\n      day: \"9.11\",\r\n      time: 8,\r\n    },\r\n    {\r\n      day: \"10.11\",\r\n      time: 8,\r\n    },\r\n    {\r\n      day: \"11.11\",\r\n      time: 5,\r\n    },\r\n    {\r\n      day: \"12.11\",\r\n      time: 5,\r\n    },\r\n    {\r\n      day: \"13.11\",\r\n      time: 6,\r\n    },\r\n    {\r\n      day: \"14.11\",\r\n      time: 7.5,\r\n    },\r\n    {\r\n      day: \"15.11\",\r\n      time: 8.5,\r\n    },\r\n    {\r\n      day: \"16.11\",\r\n      time: 6,\r\n    },\r\n    {\r\n      day: \"17.11\",\r\n      time: 7,\r\n    },\r\n    {\r\n      day: \"18.11\",\r\n      time: 10,\r\n    },\r\n    {\r\n      day: \"19.11\",\r\n      time: 8,\r\n    },\r\n    {\r\n      day: \"20.11\",\r\n      time: 8,\r\n    },\r\n    {\r\n      day: \"21.11\",\r\n      time: 5,\r\n    },\r\n    {\r\n      day: \"22.11\",\r\n      time: 5,\r\n    },\r\n    {\r\n      day: \"23.11\",\r\n      time: 6,\r\n    },\r\n    {\r\n      day: \"24.11\",\r\n      time: 7.5,\r\n    },\r\n    {\r\n      day: \"25.11\",\r\n      time: 8.5,\r\n    },\r\n    {\r\n      day: \"26.11\",\r\n      time: 6,\r\n    },\r\n    {\r\n      day: \"27.11\",\r\n      time: 7,\r\n    },\r\n    {\r\n      day: \"28.11\",\r\n      time: 10,\r\n    },\r\n    {\r\n      day: \"29.11\",\r\n      time: 8,\r\n    },\r\n    {\r\n      day: \"30.11\",\r\n      time: 8,\r\n    },\r\n  ];\r\n  const dataDays = [\r\n    {\r\n      day: \"20.11\",\r\n      time: 8,\r\n    },\r\n    {\r\n      day: \"21.11\",\r\n      time: 5,\r\n    },\r\n    {\r\n      day: \"22.11\",\r\n      time: 5,\r\n    },\r\n    {\r\n      day: \"23.11\",\r\n      time: 6,\r\n    },\r\n    {\r\n      day: \"24.11\",\r\n      time: 7.5,\r\n    },\r\n    {\r\n      day: \"25.11\",\r\n      time: 8.5,\r\n    },\r\n    {\r\n      day: \"26.11\",\r\n      time: 6,\r\n    },\r\n    {\r\n      day: \"27.11\",\r\n      time: 7,\r\n    },\r\n    {\r\n      day: \"28.11\",\r\n      time: 10,\r\n    },\r\n    {\r\n      day: \"29.11\",\r\n      time: 8,\r\n    },\r\n    {\r\n      day: \"30.11\",\r\n      time: 8,\r\n    },\r\n  ];\r\n  const cols = {\r\n    time: {\r\n      min: 4,\r\n      max: 12,\r\n    },\r\n  };\r\n  const shedule = [\r\n    { day: \"Monday\", from: \"23:00\", to: \"7:00\" },\r\n    { day: \"Tuesday\", from: \"22:00\", to: \"7:00\" },\r\n    { day: \"Wednesday\", from: \"23:00\", to: \"7:00\" },\r\n    { day: \"Thursday\", from: \"23:30\", to: \"8:30\" },\r\n    { day: \"Friday\", from: \"02:00\", to: \"10:00\" },\r\n    { day: \"Saturday\", from: \"00:00\", to: \"8:00\" },\r\n    { day: \"Sunday\", from: \"22:00\", to: \"7:00\" },\r\n  ];\r\n  const sleepStageDataInitial = [\r\n    { title: \"Awake\", minutes: 23 },\r\n    { title: \"REM\", minutes: 95 },\r\n    { title: \"Light\", minutes: 233 },\r\n    { title: \"Deep\", minutes: 86 },\r\n  ];\r\n  const [data, setData] = useState([...dataWeek]);\r\n  const [sleepStageData, setSleepStageData] = useState(sleepStageDataInitial);\r\n  const [currDay, setCurrDay] = useState([\"TODAY\", \"Tonight\"]);\r\n  const [currDataType, setCurrDataType] = useState(0);\r\n  const getRandomIntInclusive = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  };\r\n\r\n  const randomSleepStageData = () => {\r\n    const awake = getRandomIntInclusive(10, 40);\r\n    const rem = getRandomIntInclusive(90, 180);\r\n    const light = getRandomIntInclusive(120, 160);\r\n    const deep = getRandomIntInclusive(70, 120);\r\n    return [\r\n      { title: \"Awake\", minutes: awake },\r\n      { title: \"REM\", minutes: rem },\r\n      { title: \"Light\", minutes: light },\r\n      { title: \"Deep\", minutes: deep },\r\n    ];\r\n  };\r\n  const getQualityOfSleep = (minutes) => {\r\n    if (minutes >= 60 * 8) return \"very good\";\r\n    if (minutes >= 60 * 7) return \"good\";\r\n    if (minutes >= 60 * 6) return \"quite bad\";\r\n    return \"very bad\";\r\n  };\r\n\r\n  const getQualityPercentage = (minutes) => {\r\n    if (minutes >= 60 * 8) return getRandomIntInclusive(81, 100);\r\n    if (minutes >= 60 * 7) return getRandomIntInclusive(61, 80);\r\n    if (minutes >= 60 * 6) return getRandomIntInclusive(41, 60);\r\n    return getRandomIntInclusive(10, 40);\r\n  };\r\n\r\n  const getSleepStageDataTime = () => {\r\n    return sleepStageData.reduce(\r\n      (prevVal, curVal) => prevVal + curVal.minutes,\r\n      0\r\n    );\r\n  };\r\n\r\n  const convertHoursToMinutes = (hours) => {\r\n    const hrs = parseInt(hours);\r\n    const minutes = (hours - hrs) * 60;\r\n    return `${hrs}h ${minutes}min`;\r\n  };\r\n  const getTimeSlept = (minutes) => {\r\n    const hours = parseInt(minutes / 60);\r\n    const mins = minutes - hours * 60;\r\n    return `${hours}H ${mins}M`;\r\n  };\r\n\r\n  const getDay = (day) => {\r\n    if (day === data[data.length - 1].day) {\r\n      setCurrDay([\"TODAY\", \"Tonight\"]);\r\n    } else setCurrDay([`ON ${day}`, `On ${day}`]);\r\n  };\r\n\r\n  const sleepStageDataTime = getSleepStageDataTime();\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <nav className={styles.navigation}>\r\n        <h1>Stages of sleep</h1>\r\n        {sleepStageData.map((d) => (\r\n          <SleepStages\r\n            key={d.title}\r\n            minutes={d.minutes}\r\n            sleepTime={sleepStageDataTime}\r\n            title={d.title}\r\n          />\r\n        ))}\r\n        <Link to=\"/light\">\r\n          <button className={[styles.button, styles.whiteBtn].join(\" \")}>\r\n            Light assistant\r\n          </button>\r\n        </Link>\r\n      </nav>\r\n      <div className={styles.titleDiv}>\r\n        <h1>Sleep</h1>\r\n      </div>\r\n      <div className={styles.sleepQualityContainer}>\r\n        <h1>\r\n          YOU SLEPT <p>{getTimeSlept(sleepStageDataTime)}</p> {currDay[0]}! KEEP\r\n          IT GOING.\r\n        </h1>\r\n        <div className={styles.overalStatusContainer}>\r\n          <div className={styles.trackContainer}>\r\n            <img\r\n              src={trackImage}\r\n              className={styles.sleepQualityImage}\r\n              alt=\"Track\"\r\n            />\r\n            <h2>{`${getQualityPercentage(sleepStageDataTime)}%`}</h2>\r\n          </div>\r\n          <div className={styles.trackText}>\r\n            <p className={styles.trackTextInfo}>\r\n              Your overall sleep quality indicates how good was your sleep at\r\n              night comparing to other days.\r\n            </p>\r\n            <p className={styles.trackTextInfoQuality}>\r\n              {currDay[1]} your quality of sleep was{\" \"}\r\n              <span>{getQualityOfSleep(sleepStageDataTime)}</span>. <br />\r\n              <p className={styles.trackTextInfo}>\r\n                Below you can see history of your sleep.\r\n              </p>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.chartContainer}>\r\n        <Chart\r\n          title={{\r\n            position: \"left\",\r\n            style: {\r\n              fontSize: 20,\r\n              fill: \"white\",\r\n            },\r\n            color: \"white\",\r\n          }}\r\n          padding={[10, 20, 50, 50]}\r\n          autoFit\r\n          height={500}\r\n          data={data}\r\n          scale={cols}\r\n          onPointClick={(evt) => {\r\n            getDay(evt.data.data.day);\r\n            setSleepStageData(randomSleepStageData());\r\n          }} //add ability to get stages of sleep of every day\r\n        >\r\n          <Legend visible={true} />\r\n\r\n          <Line\r\n            position=\"day*time\"\r\n            style={{\r\n              stroke: \"#CD4A4A\",\r\n            }}\r\n          />\r\n          <Point\r\n            position=\"day*time\"\r\n            label=\"day\"\r\n            size={10}\r\n            animate={true}\r\n            color=\"white\"\r\n          />\r\n          <Tooltip\r\n            domStyles={{ \"g2-tooltip\": { backgroundColor: \"#CD4A4A\" } }}\r\n          >\r\n            {(title, items) => {\r\n              const day = items[0].data.day;\r\n              const time = items[0].data.time;\r\n              return (\r\n                <div className={styles.tooltip}>\r\n                  <h1>{title}</h1>\r\n                  <h2>\r\n                    On {day} you slept <p>{convertHoursToMinutes(time)}</p>\r\n                  </h2>\r\n                </div>\r\n              );\r\n            }}\r\n          </Tooltip>\r\n          <Axis\r\n            name=\"time\"\r\n            label={{ formatter: (val) => `${val}H` }}\r\n            title={{\r\n              position: \"left\",\r\n              style: {\r\n                fontSize: 20,\r\n                fill: \"white\",\r\n              },\r\n              color: \"white\",\r\n            }}\r\n          />\r\n        </Chart>\r\n        <p className={styles.chartTip}>\r\n          If you want to check your data from another day, simply click on its{\" \"}\r\n          <span>Point</span> in the chart.\r\n        </p>\r\n\r\n        <div className={styles.buttonsContainer}>\r\n          <button\r\n            className={[\r\n              styles.button,\r\n              styles.weekBtn,\r\n              currDataType === 0 ? styles.active : null,\r\n            ].join(\" \")}\r\n            onClick={() => {\r\n              if (currDataType === 0) return;\r\n              setData([...dataWeek]);\r\n              setCurrDataType(0);\r\n            }}\r\n          >\r\n            Week\r\n          </button>\r\n          <button\r\n            className={[\r\n              styles.button,\r\n              styles.monthBtn,\r\n              currDataType === 1 ? styles.active : null,\r\n            ].join(\" \")}\r\n            onClick={() => {\r\n              if (currDataType === 1) return;\r\n              setData([...dataMonth]);\r\n              setCurrDataType(1);\r\n            }}\r\n          >\r\n            Month\r\n          </button>\r\n          <button\r\n            className={[\r\n              styles.button,\r\n              styles.daysBtn,\r\n              currDataType === 2 ? styles.active : null,\r\n            ].join(\" \")}\r\n            onClick={() => {\r\n              if (currDataType === 2) return;\r\n              setData([...dataDays]);\r\n              setCurrDataType(2);\r\n            }}\r\n          >\r\n            10 days\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className={styles.sleepSheduleContainer}>\r\n        <h1>YOUR SLEEP SHEDULE FOR THIS WEEK: </h1>\r\n        {shedule.map((s) => {\r\n          return (\r\n            <div className={styles.sheduleDay}>\r\n              <h1 className={styles.sheduleDayName}>{s.day}</h1>\r\n              <h2 className={styles.sheduleDayTime}>\r\n                {s.from} - {s.to}\r\n              </h2>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <VideoContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sleep;\r\n","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport Menu from \"./components/Menu\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport Fitness from \"./components/Fitness/Fitness\"\r\nimport Light from \"./components/Light/Light\"\r\nimport Health from \"./components/Health/Health\"\r\nimport Food from \"./components/Food/Food\"\r\nimport Sleep from \"./components/Sleep/Sleep\"\r\nimport React from \"react\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Menu} />\r\n            <Route exact path=\"/light\" component={Light} />\r\n            <Route exact path=\"/health\" component={Health} />\r\n            <Route exact path=\"/fitness\" component={Fitness} />\r\n            <Route exact path=\"/food\" component={Food} />\r\n            <Route exact path=\"/sleep\" component={Sleep} />\r\n          </Switch>\r\n        </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}